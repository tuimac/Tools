AWSTemplateFormatVersion: 2010-09-09
Description: deploy

Parameters:
  VpcCidr:
    Type: String
    Default: 10.0.0.0/16

  SubnetCidr1:
    Type: String
    Default: 10.0.0.0/24

  SubnetCidr2:
    Type: String
    Default: 10.0.1.0/24

  AvailabilityZone:
    Type: String
    Default: ap-northeast-3a

  NameTagKey:
    Type: String
    Default: Name

  NameTagValue:
    Type: String
    Default: lambdaFargate

Resources:
  # VPC
  Vpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidr
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
      Tags:
        - Key: !Ref NameTagKey
          Value: !Ref NameTagValue
 
  # Internet Gateway
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: !Ref NameTagKey
          Value: !Ref NameTagValue

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref Vpc

  # Subnet
  Subnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Vpc
      CidrBlock: !Ref SubnetCidr1
      AvailabilityZone: ap-northeast-3a
      MapPublicIpOnLaunch: false
      Tags:
        - Key: !Ref NameTagKey
          Value: !Ref NameTagValue

  Subnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Vpc
      CidrBlock: !Ref SubnetCidr2
      AvailabilityZone: ap-northeast-3c
      MapPublicIpOnLaunch: false
      Tags:
        - Key: !Ref NameTagKey
          Value: !Ref NameTagValue

  # Route Table
  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - Key: !Ref NameTagKey
          Value: !Ref NameTagValue

  Route:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  RouteTableAccociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref Subnet1

  RouteTableAccociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref Subnet2

  # Security Group
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Ref NameTagValue
      GroupDescription: Allow All traffic
      VpcId: !Ref Vpc
      SecurityGroupIngress:
        - IpProtocol: -1
          CidrIp: !Ref VpcCidr
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: -1
          CidrIp: !Ref VpcCidr
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: !Ref NameTagKey
          Value: !Ref NameTagValue

  # Endpoint
  S3Endpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      PolicyDocument: '{
        "Version": "2012-10-17",
        "Statement":[{
          "Effect": "Allow",
          "Principal": "*",
          "Action": "*",
          "Resource": "*"
        }]
      }'
      RouteTableIds:
        - !Ref RouteTable
      ServiceName: !Sub com.amazonaws.${AWS::Region}.s3
      VpcId: !Ref Vpc

  # Elastic File System
  Efs:
    Type: AWS::EFS::FileSystem
    Properties:
      AvailabilityZoneName: ap-northeast-3a
      BackupPolicy:
        Status: DISABLED
      Encrypted: false
      FileSystemTags:
        - Key: !Ref NameTagKey
          Value: !Ref NameTagValue

  EfsMountTarget:
    Type: AWS::EFS::MountTarget
    Properties:
      FileSystemId: !Ref Efs
      SecurityGroups:
        - !Ref SecurityGroup
      SubnetId: !Ref Subnet1

  # Application Load Balancer
  TargetGroup:
    Type: "AWS::ElasticLoadBalancingV2::TargetGroup"
    Properties:
      VpcId: !Ref Vpc
      Name: !Ref NameTagValue
      Protocol: HTTP
      Port: 8000
      TargetType: ip

  ApplicationLoadBalancer: 
    Type: "AWS::ElasticLoadBalancingV2::LoadBalancer"
    Properties: 
      Name: !Ref NameTagValue
      Scheme: internet-facing
      LoadBalancerAttributes: 
        - Key: deletion_protection.enabled
          Value: false
        - Key: idle_timeout.timeout_seconds
          Value: 60
      SecurityGroups:
        - !Ref SecurityGroup
      Subnets: 
        - !Ref Subnet1
        - !Ref Subnet2
      Tags:
        - Key: !Ref NameTagKey
          Value: !Ref NameTagValue

  ApplicationLoadBalancerListener:
    Type: "AWS::ElasticLoadBalancingV2::Listener"
    Properties:
      DefaultActions:
        - TargetGroupArn: !Ref TargetGroup
          Type: forward
      LoadBalancerArn: !Ref ApplicationLoadBalancer
      Port: 80
      Protocol: HTTP

  # Fargate
  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Ref NameTagValue

  ECSTaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Ref NameTagValue
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy

  ECSTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Cpu: 256
      Memory: 512
      ContainerDefinitions:
        - Image: tuimac/httptracker
          Name: !Ref NameTagValue
          PortMappings:
            - HostPort: 8000
              Protocol: tcp
              ContainerPort: 8000
          mountPoints:
            - sourceVolume: !Ref NameTagValue
              containerPath: !Join
                - ''
                - - /
                  - !Ref NameTagValue
      ExecutionRoleArn: !GetAtt ECSTaskExecutionRole.Arn
      Family: !Ref NameTagValue
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      TaskRoleArn: !GetAtt ECSTaskExecutionRole.Arn
      Volumes:
        - EFSVolumeConfiguration:
            AuthorizationConfig:
              IAM: DISABLED
            FilesystemId: !Ref Efs
            RootDirectory: /
            TransitEncryption: DISABLED
          Name: !Ref NameTagValue
      Tags:
        - Key: !Ref NameTagKey
          Value: !Ref NameTagValue

  ECSService:
    Type: AWS::ECS::Service
    DependsOn: ApplicationLoadBalancerListener
    Properties:
      Cluster: !Ref ECSCluster
      DesiredCount: 
      LaunchType: FARGATE
      LoadBalancers:
        - TargetGroupArn: !Ref TargetGroup
          ContainerPort: 8000
          ContainerName: !Ref NameTagValue
      NetworkConfiguration:
       AwsvpcConfiguration:
           AssignPublicIp: ENABLED
           SecurityGroups:
             - !Ref SecurityGroup
           Subnets:
             - !Ref Subnet1
             - !Ref Subnet2
      ServiceName: !Ref NameTagValue
      TaskDefinition: !Ref ECSTaskDefinition
      DesiredCount: 1
