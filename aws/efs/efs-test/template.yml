AWSTemplateFormatVersion: 2010-09-09
Description: Create RedHat Enterprise Linux 389 directory service replication environment

Parameters:
  VpcCidr:
    Type: String
    Default: 10.0.0.0/27

  SubnetACidr:
    Type: String
    Default: 10.0.0.0/28

  SubnetBCidr:
    Type: String
    Default: 10.0.0.16/28

  PrimaryEC2IP:
    Type: String
    Default: 10.0.0.4

  SecondaryEC2IP:
    Type: String
    Default: 10.0.0.20
  
  PrimaryEFSIP:
    Type: String
    Default: 10.0.0.5

  SecondaryEFSIP:
    Type: String
    Default: 10.0.0.21

  AMIID:
    Type: String
    Default: ami-0a46491bf29e538d1
    Description: RHEL-8.4.0_HVM-20210825-x86_64-0-Hourly2-GP2

  SSHPemFilename:
    Type: String
    Default: tuimac

  TagKey:
    Type: String
    Default: Name

  TagValue:
    Type: String
    Default: efs-test

Resources:
  # VPC
  Vpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidr
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
      Tags:
        - Key: !Ref TagKey
          Value: !Ref TagValue
 
  # Internet Gateway
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: !Ref TagKey
          Value: !Ref TagValue

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref Vpc

  # Subnet
  SubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Vpc
      CidrBlock: !Ref SubnetACidr
      AvailabilityZone: ap-northeast-3a
      MapPublicIpOnLaunch: true
      Tags:
        - Key: !Ref TagKey
          Value: !Ref TagValue

  SubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Vpc
      CidrBlock: !Ref SubnetBCidr
      AvailabilityZone: ap-northeast-3b
      MapPublicIpOnLaunch: true
      Tags:
        - Key: !Ref TagKey
          Value: !Ref TagValue

  # RouteTable
  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - Key: !Ref TagKey
          Value: !Ref TagValue

  InternetRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  RouteTableAccociationA:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref SubnetA

  RouteTableAccociationB:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref SubnetB

  # Security Group
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Ref TagValue
      GroupDescription: for test
      VpcId: !Ref Vpc
      SecurityGroupIngress:
        - IpProtocol: -1
          CidrIp: !Ref VpcCidr
          Description: ANY
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
          Description: ANY
      Tags:
        - Key: !Ref TagKey
          Value: !Ref TagValue

  # Endpoint
  S3Endpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      PolicyDocument: '{
        "Version": "2012-10-17",
        "Statement":[{
          "Effect": "Allow",
          "Principal": "*",
          "Action": "*",
          "Resource": "*"
        }]
      }'
      RouteTableIds:
        - !Ref RouteTable
      ServiceName: !Sub com.amazonaws.${AWS::Region}.s3
      VpcId: !Ref Vpc

  # EFS
  EFSFileSystem:
    Type: AWS::EFS::FileSystem
    Properties:
      BackupPolicy:
        Status: DISABLED
      Encrypted: true
      FileSystemTags:
        - Key: !Ref TagKey
          Value: !Ref TagValue
      PerformanceMode: generalPurpose
      ThroughputMode: bursting

  EFSMountTargetA:
    Type: AWS::EFS::MountTarget
    Properties:
      FileSystemId: !Ref EFSFileSystem
      SubnetId: !Ref SubnetA
      IpAddress: !Ref PrimaryEFSIP
      SecurityGroups:
        - !Ref SecurityGroup

  EFSMountTargetB:
    Type: AWS::EFS::MountTarget
    Properties:
      FileSystemId: !Ref EFSFileSystem
      SubnetId: !Ref SubnetB
      IpAddress: !Ref SecondaryEFSIP
      SecurityGroups:
        - !Ref SecurityGroup

  # AWS Backup
  AWSBackupVault:
    Type: AWS::Backup::BackupVault
    Properties:
      BackupVaultName: !Ref TagValue
      BackupVaultTags:
        Key: !Ref TagKey
        Value: !Ref TagValue

  # IAM Role
  EC2InstanceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: EC2InstanceRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: EC2InstancePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - "*"
                Resource:
                  - "*"
      Tags:
        - Key: !Ref TagKey
          Value: !Ref TagValue

  EC2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref EC2InstanceRole

  SpotFleetInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: SpotFleetInstance
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - spotfleet.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2SpotFleetTaggingRole
      Tags:
        - Key: !Ref TagKey
          Value: !Ref TagValue

  AWSBackupServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: AWSBackupServiceRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - backup.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSBackupServiceRolePolicyForBackup
        - arn:aws:iam::aws:policy/service-role/AWSBackupServiceRolePolicyForRestores
      Tags:
        - Key: !Ref TagKey
          Value: !Ref TagValue

  # EC2 Instances
  Primary:
    Type: AWS::EC2::SpotFleet
    Properties:
      SpotFleetRequestConfigData:
        IamFleetRole: !GetAtt SpotFleetInstanceRole.Arn
        TerminateInstancesWithExpiration: false
        InstanceInterruptionBehavior: stop
        TargetCapacity: 1
        LaunchSpecifications:
          - BlockDeviceMappings:
              - DeviceName: /dev/sda1
                Ebs:
                  DeleteOnTermination: true
                  Encrypted: true
                  Iops: 3000
                  VolumeSize: 10
                  VolumeType: gp3
            IamInstanceProfile:
              Arn: !GetAtt EC2InstanceProfile.Arn
            KeyName: !Ref SSHPemFilename
            ImageId: !Ref AMIID
            InstanceType: t3.small
            Monitoring:
              Enabled: false
            NetworkInterfaces:
              - AssociatePublicIpAddress: true
                DeleteOnTermination: true
                Description: Primary server
                DeviceIndex: 0
                PrivateIpAddresses:
                  - Primary: true
                    PrivateIpAddress: !Ref PrimaryEC2IP
                Groups:
                  - !Ref SecurityGroup
                SubnetId: !Ref SubnetA
            SpotPrice: 1
            TagSpecifications:
              - ResourceType: instance
                Tags:
                  - Key: Name
                    Value: primary
            UserData:
              Fn::Base64: !Sub
                - |
                  #!/bin/bash
                  LOG=/var/log/user-data.log
                  touch $LOG
                  exec >> $LOG 2>&1
                    echo '8.4' > /etc/yum/vars/releasever
                    echo '8.4' > /etc/dnf/vars/releasever
                    dnf update -y
                    dnf install -y python3-pip nfs-utils git vim*
                    pip3 install --upgrade requests
                    pip3 install awscli
                    mkdir -p /etc/vim/undo
                    mkdir -p /etc/vim/backup
                    rm /etc/vimrc
                    curl -L https://raw.githubusercontent.com/tuimac/tools/master/vim/vimrc -o /etc/vimrc
                    chmod -R 777 /etc/vim
                    echo 'if [ -n "$BASH_VERSION" -o -n "$KSH_VERSION" -o -n "$ZSH_VERSION" ]; then
                      [ -x /usr/bin/id ] || return
                      ID=`/usr/bin/id -u`
                      #[ -n "$ID" -a "$ID" -le 200 ] && return
                      # for bash and zsh, only if no alias is already set
                      alias vi >/dev/null 2>&1 || alias vi=vim
                    fi' > /etc/profile.d/vim.sh
                    echo ${EFSIP}' efs.tuimac.com' >> /etc/hosts
                    echo ${PRIMARYEC2IP}' primary.tuimac.com' >> /etc/hosts
                    echo ${SECONDARYEC2IP}' secondary.tuimac.com' >> /etc/hosts
                    hostnamectl set-hostname 'primary.tuimac.com'
                    sed -i 's/SELINUX=enforcing/SELINUX=disabled/g' /etc/selinux/config
                    cd /home/ec2-user
                    git clone https://github.com/tuimac/tools.git; echo "cloned"
                    chown ec2-user:ec2-user -R /home/ec2-user/tools
                    mkdir /home/ec2-user/efs
                    echo 'efs.tuimac.com:/ /home/ec2-user/efs nfs4 nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2,noresvport,_netdev,nofail 0 0' >> /etc/fstab
                    mount -t nfs4 -o nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2,noresvport efs.tuimac.com:/ /home/ec2-user/efs
                    chown ec2-user:ec2-user -R /home/ec2-user/efs
                    echo 'export BACKUP_VAULT='${BACKUP_VAULT} >> /etc/profile
                    echo 'export BACKUP_ROLE_ARN='${BACKUP_ROLE_ARN} >> /etc/profile
                    echo 'export EFS_ARN='${EFS_ARN} >> /etc/profile
                    reboot
                - {
                    PRIMARYEC2IP: !Ref PrimaryEC2IP,
                    BACKUP_VAULT: !Ref AWSBackupVault,
                    BACKUP_ROLE_ARN: !GetAtt AWSBackupServiceRole.Arn,
                    EFS_ARN: !GetAtt EFSFileSystem.Arn,
                    SECONDARYEC2IP: !Ref SecondaryEC2IP,
                    EFSIP: !Ref PrimaryEFSIP,
                  }
