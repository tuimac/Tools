description: Reboot OS
schemaVersion: '0.3'
assumeRole: 'arn:aws:iam::xxxxxxxxxxxxx:role/xxxxxxxxxxxxxxxxxx'
parameters:
  NameTag:
    type: StringList
    description: (Required)
mainSteps:
  - name: ListTargetEC2Instances
    action: 'aws:executeAwsApi'
    timeoutSeconds: 60
    inputs:
      Service: ec2
      Api: DescribeInstances
      Filters:
        - Name: 'tag:Name'
          Values: '{{ NameTag }}'
    outputs:
      - Name: InstanceIds
        Selector: $.Reservations..Instances..InstanceId
        Type: StringList
    nextStep: RebootOS
  - name: RebootOS
    action: 'aws:executeAwsApi'
    timeoutSeconds: 60
    inputs:
      Service: ec2
      Api: RebootInstances
      InstanceIds: '{{ ListTargetEC2Instances.InstanceIds }}'
    nextStep: Sleep
  - name: Sleep
    action: 'aws:sleep'
    inputs:
      Duration: PT1M
    nextStep: CheckOS
  - name: CheckOS
    action: 'aws:runCommand'
    inputs:
      DocumentName: AWS-RunShellScript
      InstanceIds: '{{ ListTargetEC2Instances.InstanceIds }}'
      TimeoutSeconds: 300
      Parameters:
        commands:
          - 'last reboot -1'
