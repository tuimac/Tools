version: "3"

services:

  db:
    build: db
    read_only: true
    restart: unless-stopped
    volumes:
      - ./volumes/db/var/lib/postgresql/data:/var/lib/postgresql/data
      - /etc/localtime:/etc/localtime:ro
    environment:
      - POSTGRES_USER=mmuser
      - POSTGRES_PASSWORD=mmuser_password
      - POSTGRES_DB=mattermost

  app:
    build:
      context: app
      args:
        - edition=team
        - PUID=1000
        - PGID=1000
    restart: unless-stopped
    volumes:
      - ./volumes/app/mattermost/config:/mattermost/config:rw
      - ./volumes/app/mattermost/data:/mattermost/data:rw
      - ./volumes/app/mattermost/logs:/mattermost/logs:rw
      - ./volumes/app/mattermost/plugins:/mattermost/plugins:rw
      - ./volumes/app/mattermost/client-plugins:/mattermost/client/plugins:rw
      - /etc/localtime:/etc/localtime:ro
      # When you want to use SSO with GitLab, you have to add the cert pki chain of GitLab inside Alpine
      # to avoid Token request failed: certificate signed by unknown authority (link: https://github.com/mattermost/mattermost-server/issues/13059)
      # - <path_to_your_gitlab_pki>/pki_chain.pem:/etc/ssl/certs/pki_chain.pem:ro
    environment:
      - MM_USERNAME=mmuser
      - MM_PASSWORD=mmuser_password
      - MM_DBNAME=mattermost

      # use the credentials you've set above, in the format:
      # MM_SQLSETTINGS_DATASOURCE=postgres://${MM_USERNAME}:${MM_PASSWORD}@db:5432/${MM_DBNAME}?sslmode=disable&connect_timeout=10
      - MM_SQLSETTINGS_DATASOURCE=postgres://mmuser:mmuser_password@db:5432/mattermost?sslmode=disable&connect_timeout=10

  web:
    build: web
    ports:
      - "80:8080"
      - "443:8443"
    read_only: true
    restart: unless-stopped
    volumes:
      - ./volumes/web/cert:/cert:ro
      - /etc/localtime:/etc/localtime:ro
    cap_drop:
      - ALL

  mattermost-webrtc:
    container_name: mattermost-webrtc
    image: mattermost/webrtc:latest
    restart: always
    ports:
      - "7088:7088"
      - "8188:8188"

  gitlab:
    container_name: gitlab
    image: gitlab/gitlab-ce:latest
    restart: always
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        external_url 'http://13.231.219.183'
        gitlab_rails['gitlab_ssh_host'] = '13.231.219.183'
        gitlab_rails['time_zone'] = 'UTC'
        registry_external_url 'http://13.231.219.183'
        pages_external_url 'http://13.231.219.183'
        mattermost_external_url 'http://13.231.219.183'
        mattermost['webrtc_enable'] = true
        mattermost['webrtc_gateway_websocket_url'] = 'ws://13.231.219.183:8188'
        mattermost['webrtc_gateway_admin_url'] = 'http://13.231.219.183:7088/admin'
        mattermost['webrtc_gateway_admin_secret'] = 'janusoverlord'
    volumes_from:
      - gitlab-data
    ports:
      - "8080:80"
      - "2222:22"

  gitlab-data:
    image: busybox
    volumes:
      - /etc/gitlab
      - /var/log/gitlab
      - /var/opt/gitlab

  gitlab-runner:
    container_name: gitlab-runner
    image: gitlab/gitlab-runner:alpine
    restart: always
    volumes_from:
      - gitlab-runner-data
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "$HOME/.docker/config.json:/root/.docker/config.json"
